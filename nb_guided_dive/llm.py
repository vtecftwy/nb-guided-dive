"""Imports all required packages common to all notebooks used in guided dives"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs-dev/04_llm.ipynb.

# %% auto 0
__all__ = ['imported_objects', 'all_layer_names', 'children_names', 'get_children', 'show_parameters_shape', 'print_bert_results',
           'print_gpt2_results', 'md', 'clean_up']

# %% ../nbs-dev/04_llm.ipynb 3
imported_objects  = ['np', 'pd', 'plt', 'Path', 'torch']
try:
    __all__.extend(imported_objects)
except:
    __all__ = imported_objects

# %% ../nbs-dev/04_llm.ipynb 4
import gc
import shutil
import subprocess
import sys
import warnings
from pathlib import Path
from pprint import pprint

import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import torch


# %% ../nbs-dev/04_llm.ipynb 5
def all_layer_names(m):
    """Utility functions to extract submodule names and objects from a model"""
    names = [sub[0] for sub in m.named_modules()]
    print(f"We have {len(names)} sub modules:")
    for n in names:
        print(f" - {n}")

def children_names(m):
    names = [child[0] for child in m.named_children()]
    print(f"We have {len(names)} top-level modules:")
    for n in names:
        print(f" - {n}")

def get_children(m): return [child[1] for child in m.named_children()]

def show_parameters_shape(m):
    for p in m.parameters():
        display(p.shape)

def print_bert_results(res):
    for i, item in enumerate(res):
        masked = item['token_str']
        mask_s = item['sequence'].find(masked)
        mask_e = mask_s + len(masked)
        str_md = f"- " + item['sequence'][:mask_s] + '... **' + item['sequence'][mask_s:mask_e] + '** ...' + item['sequence'][mask_e:] + f"(*Prob: {item['score']:.3f}*)"
        display(Markdown(str_md))

def print_gpt2_results(res):
    display(Markdown(res[0]['generated_text']))

def md(text):
    display(Markdown(text))

def clean_up(*args):
    for o in args:
        try:
            del o
        except:
            pass
    gc.collect()
    gc.collect(generation=2)
